import { p as parse, a as authorize } from '../../dist/authorize-1114d5c4.esm.js';
export { h as help } from '../../dist/authorize-1114d5c4.esm.js';
import '@spotifly/utils';
import 'node-fetch';
import '@eegli/tinyparse';
import 'http';

var _package = {
	name: "@spotifly/auth-token",
	version: "1.0.0",
	description: "A simple utility for retrieving Spotify authentication and refresh tokens. Supports programmatic and CLI use",
	keywords: [
		"spotify",
		"auth",
		"token",
		"refresh token",
		"authorization",
		"authentication",
		"cli",
		"typescript"
	],
	homepage: "https://spotifly.nougat.dev/docs/packages/auth-token",
	repository: {
		type: "git",
		url: "https://github.com/eegli/spotifly"
	},
	license: "MIT",
	author: {
		name: "Eric Egli",
		email: "lx180777+npm@gmail.com"
	},
	main: "dist/spotifly-auth-token.cjs.js",
	module: "dist/spotifly-auth-token.esm.js",
	files: [
		"dist",
		"cli"
	],
	dependencies: {
		"@eegli/tinyparse": "^0.7.0",
		"@spotifly/utils": "workspace:^",
		"node-fetch": "2.6.7"
	},
	devDependencies: {
		"@types/fs-extra": "^9.0.13",
		"@types/node-fetch": "^2.6.2"
	},
	engines: {
		node: ">=14"
	},
	publishConfig: {
		directory: "_release/package"
	},
	preconstruct: {
		entrypoints: [
			"index.ts",
			"cli.ts"
		]
	}
};

const callback = async argv => {
  const config = await parse(argv);
  await authorize(config);
};

export { callback, _package as pkg };
