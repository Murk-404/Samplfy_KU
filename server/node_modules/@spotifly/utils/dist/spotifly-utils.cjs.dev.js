'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tty = require('tty');
var fs_dist_spotiflyUtilsFs = require('../fs/dist/spotifly-utils-fs.cjs.dev.js');
var iterable_dist_spotiflyUtilsIterable = require('../iterable/dist/spotifly-utils-iterable.cjs.dev.js');
require('fs-extra');
require('path');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var tty__default = /*#__PURE__*/_interopDefault(tty);

/* Internalized from https://github.com/sindresorhus/yoctocolors/blob/main/index.js */
const hasColors = tty__default["default"].WriteStream.prototype.hasColors(); // Intentionally not using template literal for performance.

const format = (startCode, endCode) => hasColors ? string => '\u001B[' + startCode + 'm' + string + '\u001B[' + endCode + 'm' : string => string;

const reset = format(0, 0);
const bold = format(1, 22);
const dim = format(2, 22);
const italic = format(3, 23);
const underline = format(4, 24);
const overline = format(53, 55);
const inverse = format(7, 27);
const hidden = format(8, 28);
const strikethrough = format(9, 29);
const black = format(30, 39);
const red = format(31, 39);
const green = format(32, 39);
const yellow = format(33, 39);
const blue = format(34, 39);
const magenta = format(35, 39);
const cyan = format(36, 39);
const white = format(37, 39);
const gray = format(90, 39);
const bgBlack = format(40, 49);
const bgRed = format(41, 49);
const bgGreen = format(42, 49);
const bgYellow = format(43, 49);
const bgBlue = format(44, 49);
const bgMagenta = format(45, 49);
const bgCyan = format(46, 49);
const bgWhite = format(47, 49);
const bgGray = format(100, 49);

var colors = /*#__PURE__*/Object.freeze({
  __proto__: null,
  reset: reset,
  bold: bold,
  dim: dim,
  italic: italic,
  underline: underline,
  overline: overline,
  inverse: inverse,
  hidden: hidden,
  strikethrough: strikethrough,
  black: black,
  red: red,
  green: green,
  yellow: yellow,
  blue: blue,
  magenta: magenta,
  cyan: cyan,
  white: white,
  gray: gray,
  bgBlack: bgBlack,
  bgRed: bgRed,
  bgGreen: bgGreen,
  bgYellow: bgYellow,
  bgBlue: bgBlue,
  bgMagenta: bgMagenta,
  bgCyan: bgCyan,
  bgWhite: bgWhite,
  bgGray: bgGray
});

exports.writeJSON = fs_dist_spotiflyUtilsFs.writeJSON;
exports.chunkify = iterable_dist_spotiflyUtilsIterable.chunkify;
exports.colors = colors;
