# from selenium.webdriver import Firefox
# from selenium.webdriver.common.by import By
# from selenium.webdriver.common.keys import Keys
# from selenium.webdriver.firefox.options import Options
# from selenium.webdriver.common.action_chains import ActionChains
# from selenium.webdriver.support.ui import WebDriverWait


# import time
# opts = Options()
# # opts.headless = True
# # assert opts.headless  # Operating in headless mode
# # browser = Firefox(options=opts)
# browser = Firefox()
# action = ActionChains(browser)

# browser.get('https://developer.spotify.com/dashboard/login')
# element = WebDriverWait(20).until(browser.visibility_of_element_located(by_locator))
# login_button = browser.find_element(By.XPATH,'//*[@id="page-content"]/div/main/section/div[2]/div[2]/div/p[2]/button')
# # login_button.send_keys(Keys.CONTROL + Keys.SHIFT)
# # login_button.click()
# action.key_down(Keys.CONTROL, Keys.SHIFT).click(login_button)
# # action.key_down(Keys.CONTROL, Keys.SHIFT)
# # action.click(login_button)
# action.perform()
# time.sleep(3)
# input_field = browser.find_element(By.XPATH, '//*[@id="login-username"]')

# input_field.send_keys('fullmtyl@yahoo.com')
# # input_field.send_keys(Keys.CONTROL + Keys.ENTER)
# time.sleep(1000)
# # search_form = browser.find_element_by_id('search_form_input_homepage')
# # search_form.send_keys('real python')
# # search_form.submit()
# # results = browser.find_elements_by_class_name('result')
# # print(results[0].text)
# # browser.close()
# # quit()

# Generated by Selenium IDE
# import pytest
# import time
# import json
# from selenium import webdriver
# from selenium.webdriver.common.by import By
# from selenium.webdriver.common.action_chains import ActionChains
# from selenium.webdriver.support import expected_conditions
# from selenium.webdriver.support.wait import WebDriverWait
# from selenium.webdriver.common.keys import Keys
# from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

# class TestSpotifyLoginTest():
#   def setup_method(self, method):
#     self.driver = webdriver.Firefox()
#     self.vars = {}
  
#   def teardown_method(self, method):
#     self.driver.quit()
  
#   def test_spotifyLoginTest(self):
#     self.driver.get("https://developer.spotify.com/dashboard/applications/53c0537d418540e08a9f37fa33e35052")
#     element = self.driver.find_element(By.CSS_SELECTOR, ".btn-stroked-light:nth-child(2)")
#     actions = ActionChains(self.driver)
#     actions.move_to_element(element).perform()
#     self.driver.find_element(By.CSS_SELECTOR, ".btn-stroked-light:nth-child(2)").click()
#     element = self.driver.find_element(By.CSS_SELECTOR, "body")
#     actions = ActionChains(self.driver)
#     actions.move_to_element(element, 0, 0).perform()
#     self.driver.find_element(By.CSS_SELECTOR, ".btn-stroked-light:nth-child(2)").click()
#     element = self.driver.find_element(By.CSS_SELECTOR, ".btn-stroked-light:nth-child(2)")
#     actions = ActionChains(self.driver)
#     actions.move_to_element(element).perform()
#     element = self.driver.find_element(By.CSS_SELECTOR, "body")
#     actions = ActionChains(self.driver)
#     actions.move_to_element(element, 0, 0).perform()
#     self.driver.find_element(By.LINK_TEXT, "ADD NEW USER").click()
#     self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(1) > .control-label > .form-control").click()
#     self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(1) > .control-label > .form-control").send_keys("Test")
#     self.driver.find_element(By.CSS_SELECTOR, ".ng-untouched:nth-child(2)").click()
#     self.driver.find_element(By.CSS_SELECTOR, ".ng-untouched:nth-child(2)").send_keys("testtest@test.com")
#     self.driver.find_element(By.CSS_SELECTOR, ".col-sm-3:nth-child(1)").click()
  
# testClass = TestSpotifyLoginTest()

# testClass.setup_method("")
# testClass.test_spotifyLoginTest()
# testClass.teardown_method("")